language: generic
matrix:
  include:
    - os: linux
    - os: osx
before_install:
  # make sure, gfortran and gnu-sed are installed
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install gnu-sed --with-default-names;
    fi
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
git:
    submodules: false
install:
  # checkout submodules (but not recursively)
  - git submodule update --init
  # select the os name for the conda installer
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export OS_NAME=MacOSX;
    else
        export OS_NAME=Linux;
    fi
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-"${OS_NAME}"-x86_64.sh -O miniconda.sh;
  - 'echo "backend : module://psyplot_gui.backend" > matplotlibrc'
  - bash miniconda.sh -b -p $HOME/miniconda
  - export ORIG_PATH=$PATH
  - export PATH="$HOME/miniconda/bin:$ORIG_PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - if [[ $TRAVIS_TAG == "" ]]; then
        ARGS="";
    else
        ARGS="-v $TRAVIS_TAG";
    fi
  # update conda
  - conda env update -f environment.yml -n root
  - conda install constructor conda-build
  # install the submodules
  - cd psyplot && python setup.py install && cd ../
  - cd psyplot-gui && python setup.py install && cd ../
  - cd psy-simple && python setup.py install && cd ../
  - cd psy-maps && python setup.py install && cd ../
  - cd psy-reg && python setup.py install && cd ../
  # prepare the recipes
  - python recipe_from_setup.py psyplot recipes
  - python recipe_from_setup.py psyplot-gui psyplot-gui/ci/conda_recipe
  - python recipe_from_setup.py psy-simple recipes
  - python recipe_from_setup.py psy-maps recipes
  - python recipe_from_setup.py psy-reg recipes
  # link the already downloaded conda packages to the constructor config to
  # speed up the build
  - CONSTRUCTOR_CONFIG=$HOME/.conda/constructor/$TRAVIS_OS_NAME-64
  - if [[ ! -e $CONSTRUCTOR_CONFIG ]]; then
        mkdir -p $CONSTRUCTOR_CONFIG;
    fi
  - for f in $HOME/miniconda/pkgs/*.tar.bz2; do
        ln -s $f "${CONSTRUCTOR_CONFIG}/`basename $f`";
    done
  # update psy-simple and psy-maps reference figures submodules
  - cd psy-simple && git submodule update --init `python tests/get_ref_dir.py` && cd ..
  - cd psy-maps && git submodule update --init `python tests/get_ref_dir.py` && cd ..
  # print debugging informations
  - conda env export -n root
  # print versions of all the important requirements
  - psyplot -aV

before_script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
        export "DISPLAY=:99.0";
        sh -e /etc/init.d/xvfb start;
        sleep 3;
    fi

script:
  # build the receipts and prepare the constructor files
  - python prepare_constructor_files.py recipes/* psyplot-gui/ci/conda_recipe $ARGS
  # construct the executable
  - constructor psyplot-conda
  # execute the executable
  - bash psyplot-conda-*-"${OS_NAME}"-*.sh -p $HOME/psyplot-conda -b
  # export the new path and remove current miniconda installation
  - export PATH="$HOME/miniconda/bin:$ORIG_PATH" && hash -r
  # install pytest
  - pip install pytest
  # run tests for psyplot
  - py.test -v psyplot
  # run tests for psyplot-gui
  - py.test -v psyplot-gui
  # run (some) tests for psy-simple
  - py.test -v psy-simple -k "LinePlotterTest2D or Simple2DPlotterTest2D"
  # run (some) tests for psy-maps
  - py.test -v psy-maps -k "FieldPlotterTest or IconFieldPlotterTest"
  # run tests for psy-reg
  - py.test -v psy-reg
