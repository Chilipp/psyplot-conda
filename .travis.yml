language: generic
env:
  global:
    - secure: "phWqxuGUbL1waOeDo/Tr7h5AHP4DS6Gr5rnBBXy9SD8+VVgXRUbJmY2VR03JQaiYkToArLDzZt3KujxLStbWmCOvtSmSpLeJCPkTruKuZgaCJyeuqk67GD9BXuMqdiOy5EeiHQGIj/zIjxVpkoL4HRH+7I+3FSb1HCLp5lLFZqYmp9Vy7xbiY2IrON8hOnnzlQPlwtTm5XM0/X2X3zavPSDugYu4LcZaj3U8EAkLAg6KJDKED51eXyPFG8Kj+Knf7DXpTWCoQBjvwp4djfP6Q36rZt3oj8TgqW/fGvixvfptP0MEjVRsYK187kJOCnMb4hwwuJUMDj2hTHrFeKODlP18dKvoPB+cgrKsSntelUXjqMZFCVM1t8YobUmc9S6vgUzoZcVAyGYawawVi0lzFjucUdqxPVn2pqAWCK0MHxcOWH9iLAvl5zg8VLNY7SaGxrycaL/2/qoM2F9KLc16tlCbLOPJUWana4oB3dGn3nc58X1GVhxsluPsdpVlp46AjWbsVwEYhThg36qNJjAU1YU/iZ2sCOsIJGmnKGf7rUmbeM37X1gijiROfYE1YAT8jzdX7OOIa/IpHqkeNoH5cdd/5HSGwlaxoZndgjJJnJliwOheO6BgArvL3AokjoqVlOI8CaUEd+hk9JRFqFa6pEKZpcMhWbbcn10ecNveG98="
matrix:
  include:
    - os: linux
    - os: osx
before_install:
  # make sure, gfortran and gnu-sed are installed
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install gnu-sed --with-default-names;
    fi
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
git:
    submodules: false
install:
  # unset the global SWITCH_DRIVE_PW variable because it is not needed during
  # the installation process. This decreases the vulnerability
  - SWITCH_DRIVE_PW_SAVE=$SWITCH_DRIVE_PW
  - unset SWITCH_DRIVE_PW
  # checkout submodules (but not recursively)
  - git submodule update --init
  # select the os name for the conda installer
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export OS_NAME=MacOSX;
    else
        export OS_NAME=Linux;
    fi
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-"${OS_NAME}"-x86_64.sh -O miniconda.sh;
  - 'echo "backend : module://psyplot_gui.backend" > matplotlibrc'
  - bash miniconda.sh -b -p $HOME/miniconda
  - export ORIG_PATH=$PATH
  - export PATH="$HOME/miniconda/bin:$ORIG_PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - if [[ $TRAVIS_TAG == "" ]]; then
        ARGS="";
    else
        ARGS="-v $TRAVIS_TAG";
    fi
  # update conda
  - conda env create -f environment.yml
  - conda install constructor conda-build
  - source activate psyplot_conda
  # install the submodules
  - cd psyplot && python setup.py install && cd ../
  - cd psyplot-gui && python setup.py install && cd ../
  - cd psy-simple && python setup.py install && cd ../
  - cd psy-maps && python setup.py install && cd ../
  - cd psy-reg && python setup.py install && cd ../
  # prepare the recipes
  - python recipe_from_setup.py psyplot recipes
  - python recipe_from_setup.py psyplot-gui psyplot-gui/ci/conda_recipe
  - python recipe_from_setup.py psy-simple recipes
  - python recipe_from_setup.py psy-maps recipes
  - python recipe_from_setup.py psy-reg recipes
  # link the already downloaded conda packages to the constructor config to
  # speed up the build
  - CONSTRUCTOR_CONFIG=$HOME/.conda/constructor/$TRAVIS_OS_NAME-64
  - if [[ ! -e $CONSTRUCTOR_CONFIG ]]; then
        mkdir -p $CONSTRUCTOR_CONFIG;
    fi
  - for f in $HOME/miniconda/pkgs/*.tar.bz2; do
        ln -s $f "${CONSTRUCTOR_CONFIG}/`basename $f`";
    done
  # update psy-simple and psy-maps reference figures submodules
  - cd psy-simple && git submodule update --init `python tests/get_ref_dir.py` && cd ..
  - cd psy-maps && git submodule update --init `python tests/get_ref_dir.py` && cd ..
  # print debugging informations
  - conda env export -n psyplot_conda
  # print versions of all the important requirements
  - psyplot -aV
  # export the pw to make it available for the deploy
  - export SWITCH_DRIVE_PW=$SWITCH_DRIVE_PW_SAVE

before_script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
        export "DISPLAY=:99.0";
        sh -e /etc/init.d/xvfb start;
        sleep 3;
    fi

script:
  # build the receipts and prepare the constructor files
  - python prepare_constructor_files.py recipes/* psyplot-gui/ci/conda_recipe/psyplot-gui $ARGS -n psyplot_conda
  # construct the executable
  - constructor psyplot-conda
  # deactivate conda environment and delete miniconda
  - source deactivate && rm -r $HOME/miniconda
  # execute the executable
  - bash psyplot-conda-*-"${OS_NAME}"-*.sh -p $HOME/psyplot-conda -b
  # export the new path and remove current miniconda installation
  - export PATH="$HOME/psyplot-conda/bin:$ORIG_PATH" && hash -r
  # install pytest
  - pip install pytest
  # run tests for psyplot
  - py.test -v psyplot
  # run tests for psyplot-gui
  - py.test -v psyplot-gui
  # run (some) tests for psy-simple
  - py.test -v psy-simple -k "LinePlotterTest2D or Simple2DPlotterTest2D"
  # run (some) tests for psy-maps
  - py.test -v psy-maps -k "FieldPlotterTest2D and not Circumpolar"
  # run tests for psy-reg
  - py.test -v psy-reg

before_deploy:
    - export FINAL_FILE=$(ls psyplot-conda-*-"${OS_NAME}"-*.sh)

deploy:
  - provider: script
    script: ci/deploy_nightly.sh "philipp.sommer@unil.ch:$SWITCH_DRIVE_PW" "$FINAL_FILE"
    skip_cleanup: true
    on:
      all_branches: true
      repo: Chilipp/psyplot-conda
      # do not deploy releases
      condition: '$TRAVIS_TAG == ""'
  - provider: releases
    api_key:
      secure: m/ttzXxgMNrjP+MkK+HeeCPdiAEfB+TJRvS5Sqxhpokxud4ji1cUUIB2bpWmD7ujju9w1blfxvqR1nt1CET79FKbDmb/He0JiXwKQyQ007Hzm9stpp1Kt+OXoSrfIzeAqmdhlqkrXdGw076FcVHGw7E5GAueAroGOkH0xw7/QJWGo7bOkzE6SoNTGZ1EV1zlsR3HnPP3679AEmIA6iz9aIsy8dGbq0Tb4TMFP+ddCGzMxhCCO1dcgf9+zBw6dl/sZ1NSkiT1OR428sqKVAG8CM7ulL5xcbqtVjVU2SGCQ5TP7V7bx40RSr+KgS/6L7qXgabWxY26q5LhKi4che5Evg+ki2FP28BzLwwRzdrMErwrd/LTwfoLPPFfJ90+YJ3+FOSDz+V6jweUkQUA7+QNYMUixuypPBiwQbW8XPHxk4Z7poTTUHiE4tqO/VpauAa8T3XGrap18cDrxw8bEqvYUjxUbojy92UyhXntm0iqWBfubLAgoWYZ0PikVxxW6E73wf9suEnQkIUMIDfRAdDYHhQDeWkANt7siZYGDx0zf8iBTkTGrdV6uTx+G9+LxzoSoO5oXyCQD30m9/a6dqftTdkCk5i7i2Xr+EpLHzKK/jG2rR+zmDT5dZKEAbVyK0FcxHHB4+r/8VKZP7C5MhqD11Irc2Xr+9iB/lQTwvmDicc=
    file: $FINAL_FILE
    skip_cleanup: true
    on:
      repo: Chilipp/psyplot-conda
      tags: true
